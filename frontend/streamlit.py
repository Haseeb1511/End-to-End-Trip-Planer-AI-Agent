import streamlit as st
import datetime
import requests
from src.config.save_to_documnet import save_document
import os

# API_URL = "http://localhost:8000/query"  #for local test 
API_URL = os.environ.get("API_URL", "http://localhost:8000/query")  # for server (aws)or docker compose this work

st.set_page_config(layout="centered",
                   initial_sidebar_state="expanded",
                   page_title="Trip Planner")

st.title("AI Trip Planner")
st.subheader("Let's Plan Your Trip")

if "messages" not in st.session_state:   ##this line initializes a session_state variable called messages.
    st.session_state.messages = []





with st.form(key="query_form",clear_on_submit=False):
    st.subheader("🗺️ Hello! I’m your AI Travel Agent — how can I make your journey amazing today?")
    user_input = st.text_input("enter query")
    start_date,end_date = st.date_input("Select your travel date",
                                        value=[datetime.date.today(), datetime.date.today() + datetime.timedelta(days=7)])
    budget = st.slider("Chose YOour budget range(PKR) :",min_value=0,max_value=100000,value=(1000,5000))
    submit = st.form_submit_button("submit")


if submit and user_input.strip():
    try:
        with st.spinner("Planning your trip....."):
            payload = {"question":user_input,
                       "travel_start_date": start_date.isoformat(),
                        "travel_end_date": end_date.isoformat(),
                       "budget_range": list(budget)}
            
            response = requests.post(API_URL,json=payload)

            if response.status_code==200:
                answer = response.json().get("answer","no answer returned")
                st.write(f"Here is your travel plane from {start_date} to {end_date} in the budget range of {budget}")

                markdown_content = f"""

                ## Haseeb Travel Agency,
                
                {answer}

                This plan is generated by AI please verify it as it can make mistake

                Have a happy Trip😊😊
                """
                st.markdown(markdown_content)
            else:
                st.error("Error connecting to the API "+response.text)
            
            filename = save_document(answer)
            if filename:
                st.success(f"✅ Your trip plan has been saved to: `{filename}`")
            else:
                st.warning("⚠️ Failed to save your trip plan.")


    except Exception as e:
        st.error(f"An error occure while connecting to API: {e}")







